name: Linting and Testing for Continuous Integration

on:
  push:
    branches:
      - '**'

jobs:
  JavaFormat: # Format Java Code to meet the Google Java Style Guide
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # v2 minimum required
        with:
          token: ${{secrets.PAT_TOKEN}} # Re-running the Linter on auto commits.
          # To re-run a GitHub Action on a Commit made by a GitHub Action, The
          # action that commits needs to run with a Personal Access token (PAT_TOKEN).
          # To change the current PAT_TOKEN, check the repository settings.
          # for more information see
          # (https://docs.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token)
      # Recommended: latest versions of Google Java Format require JDK 11+
      - name: Use Java 11
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: Format Java Code
        uses: axel-op/googlejavaformat-action@v3
        with:
          args: "--replace"

  
  ESLint: # Format JavScript to meet the Google Style Guide and annotate any errors
  # that cannot be easily changed.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{secrets.PAT_TOKEN}} # Re-running Linter on auto commit.
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    # Cache npm dependencies to speed up subsequent runs of the GitHub Actions 
    # Linter.
    - name: Cache local npm dependencies 
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-  
    - name: Install dependencies
      run: npm install
      # Run the installed version of ESLint and fix Javascript code.
    - name: Run ESLint
      continue-on-error: true
      run: npx eslint "src/**" --ext .js,.jsx,.ts,.tsx --fix 
      # Commit changes made during the previous step.
    - name: Commit ESLint changes
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Apply ESLint changes.
      # Run the ESLint GitHub Action for showing un-fixable JavaScript style 
      # violations. This action is not built to fix code but it makes it easier
      # to find the errors caught by ESLint in the file changes PR tab.
    - name: Annotate ESLint errors
      uses: hallee/eslint-action@1.0.3
      if: ${{ github.event_name == 'push' || github.event.pull_request.head.repo.full_name == github.repository }} 
      with:
        repo-token: ${{secrets.GITHUB_TOKEN}}

  BuildAndTest:  # Check that the current Code can be built and all the current 
  # tests pass. This check is a safegaurd to ensure that the master branch is
  # never broken. BuildAndTest is set to be a compulsory check that must pass
  # before any merges are made to master. This can be changed in the branch
  # protection settings.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 
    - name: Use Java 8
      uses: actions/setup-java@v1
      with:
        java-version: "8"
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    # Cache npm dependencies to speed up subsequent runs of the GitHub Actions Linter.
    - name: Cache local npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    # Cache mvn dependencies to speed up subsequent runs of the GitHub Actions Linter.
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Install Dependencies
      run: npm install
    - name: Build and check for errors
      run: npm run verify
